The ``3-say_my_name`` module
============================

"""
This a a doctest file that test the say_my_name
function for possible edge cases
"""

Importing the add_integer module::
    >>> say_my_name = __import__('3-say_my_name').say_my_name

passing two strings:
    >>> say_my_name("Johnson", "Adeola") # doctest: +NORMALIZE_WHITESPACE
    My name is Johnson Adeola
    
Check for correct output
    >>> say_my_name("Walter", "White") # doctest: +NORMALIZE_WHITESPACE
    My name is Walter White

Check for missing 2nd argument
    >>> say_my_name("Bob") # doctest: +NORMALIZE_WHITESPACE
    My name is Bob 

Check for non-string as second argument
    >>> say_my_name("Bob", 24)
    Traceback (most recent call last):
                ...
    TypeError: last_name must be a string

Check for non-string in first argument
    >>> say_my_name(24, "Bob")
    Traceback (most recent call last):
                ...
    TypeError: first_name must be a string

Check for non-string arguments in both
    >>> say_my_name((0, 0), "Last")
    Traceback (most recent call last):
                ...
    TypeError: first_name must be a string

Check for list with string in second argument
    >>> say_my_name("Bob", ["hi", 5])
    Traceback (most recent call last):
                ...
    TypeError: last_name must be a string

Check for empty string in both arguments
    >>> say_my_name("", "") # doctest: +NORMALIZE_WHITESPACE
    My name is  

Check for missing both arguments 
    >>> say_my_name() #doctest: +IGNORE_EXCEPTION_DETAIL
    Traceback (most recent call last):
                ...
    TypeError: